#!/usr/bin/env python
PACKAGE = "obstacle_detector"
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add('use_scan', bool_t, 0, 'Should use laser scans for extraction')
gen.add('use_pcl', bool_t, 0, 'Should use point cloud for extraction')
gen.add('use_split_and_merge', bool_t, 0, 'Should use split + merge algorithm')
gen.add('circles_from_visible', bool_t, 0, 'Should use split + merge algorithm')
gen.add('discart_coordinates', bool_t, 0, 'Should use split + merge algorithm')

gen.add('min_group_points', int_t, 0, 'Minimum points to form group')
gen.add('max_group_distance', double_t, 0, 'Maximal distance between points')
gen.add('distance_proportion', double_t, 0, '...')
gen.add('max_split_distance', double_t, 0, '...')
gen.add('max_merge_separation', double_t, 0, '...')
gen.add('max_merge_spread', double_t, 0, '...')
gen.add('max_circle_radius', double_t, 0, '...')
gen.add('radius_enlargement', double_t, 0, '...')

gen.add('frame_id', str_t, 0, '...')

exit(gen.generate(PACKAGE, "obstacles_extractor", "obstacles_extractor_params"))
